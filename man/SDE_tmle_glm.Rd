% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SDE_tmle_glm.R
\name{SDE_tmle_glm}
\alias{SDE_tmle_glm}
\title{SDE_tmle_glm}
\usage{
SDE_tmle_glm(data, truth = NULL, truncate = list(lower = 1e-04, upper =
  0.9999), B = 500, forms, RCT = 0.5)
}
\arguments{
\item{data, }{data.frame of variables in time ordering from left to right. Confounders must have
a W in the name.  Otherwise, S = site, A = treatment, Z = intermediate confounder, M = mediator
and Y is the outcome.}

\item{truth}{for testing purposes input a list with names f_W, f_S, f_Z and f_Y models representing
and the corresponding elements are functions of appropriate variables so as to be able to
generate the truth and check the estimator's performance.  Default is NULL}

\item{truncate, }{a list with elements lower and upper to truncate the various p-scores
not functional at present}

\item{forms, }{list of formulas for all varialbes.  Include for each necessary model, going backwards from the
outcome, Y, M, Z, A, W, S where S is the binary site, W are confounders, A is the treatment
Z is the intermediary confounder (binary) and M is the mediator, Y is the outcome.}
}
\value{
a list with a CI's for SDE and SIE as well as the bootstrap inference for both
point estimates for the means under (a*,a) combos (0,0), (0,1), (1,1) and the epsilons for
both sequential regressions for those three parameters
}
\description{
computes the sequential regression, targeted maximum likelihood estimate
for the stochastic direct effect or stochastic indirect effect when the outcome and
mediator model are only available on site 1 (S = 1).  This is a data adaptive parameter
as the stochastic direct effect has a model for the mediator is determined on the data for
site 1.
}
\examples{
devtools::install_github("jeremyrcoyle/sl3")
devtools::install_github("jlstiles/SDE_transport")
library("SDEtransport")
library(sl3)

#Set up data generating process:
# data generating process for 1-d W
f_W = function(n) {
  W1 = rnorm(n)
  W2 = rbinom(n, 1, 0.72)
  data.frame(W1=W1, W2=W2)
}
f_S = function(W) {
  with(W, plogis(W1 - W2 + 0.3))
}
# make a pscore model
f_A = function(S,W) {
  df = as.data.frame(cbind(S=S, W))
  with(df, plogis(-.6*S-.7*W1 + 0.1*W2 +.17))
}
# make a intermediate confounder model
f_Z = function(A,S,W) {
  df = as.data.frame(cbind(S=S, W, A = A))
  with(df, plogis(.1*S-.4*W1 - W2 + 1*A-.3))
}
# make an M model according to the restrictions
f_M = function(Z,W,S) {
  df = as.data.frame(cbind(Z=Z, W, S=S))
  with(df, plogis(-.14*S + 1*W1 - W2 + 1.2*Z +.1))
}
# make a Y model according to the restrictions, main terms linear logistic reg.
# plug-in is biased and not robust like tmle
f_Y = function(M,Z,W) {
  df = as.data.frame(cbind(M = M, Z = Z, W))
  with(df, plogis(W2*M + 3*cos(W1)*Z-.4))
}

# generate n random samples
n = 1e2
set.seed(1)
data = gendata.SDEtransport(n, f_W = f_W, f_S = f_S, f_A = f_A, f_Z = f_Z, f_M = f_M, f_Y = f_Y)
mean(data$S==0)

# define the forms for all the regressions
forms=list(Sform = formula("S ~ W1"),
           Aform = formula("A ~ S + W2"),
           Zstarform = formula("Z ~ S + A + W1"),
           QZform = formula("Qstar_Mg ~ Z + S + W1"),
           Mstarform = formula("M ~ Z + W2"),
           Yform = formula("Y ~ M + Z + W1"))

# generate n random samples
n = 5e3
set.seed(1)
data = gendata.SDEtransport(n, f_W = f_W, f_S = f_S, f_A = f_A, f_Z = f_Z, f_M = f_M, f_Y = f_Y)
mean(data$S==0)

W = data[,grep("W", colnames(data))]
data = list(W=W, S=data$S, A=data$A, Z=data$Z, M=data$M, Y=data$Y)

# run the tmle, specifying 2 bootstraps for bootstrap inference but obviously 2 is way too few.
testres = SDE_tmle_glm(data=data, truth = NULL, truncate = list(lower =.0001, upper = .9999), 
                        B = 2, forms, RCT = NULL) 

testres

# run the tmle, with a known data generating process, in case of simulation
truth = list(f_W = f_W, f_S = f_S, f_A = f_A, f_Z = f_Z, f_M = f_M, f_Y = f_Y)
testres1 = SDE_tmle_glm(data=data, truth = truth, truncate = list(lower =.0001, upper = .9999), 
                       B = 2, forms, RCT = NULL) 

testres1
}
